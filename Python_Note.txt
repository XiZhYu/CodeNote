#代替MATLAB作图
#基于matplotlib包

#开头固定格式
import matplotlib.pyplot as plt  #导入绘图包，给别名
import numpy as np  #导入包，给别名

#CASE1====================================================================
x = np.linspace(-3,3,100)
y1 = 2*x + 1
y2 = x**2

plt.figure(figsize(5,5))  #创建一个figure，给定长宽

line1, = plt.plot(x,y1,color='red',linewidth=1.0,linestyle='--')
line2, = plt.plot(x,y2,color='blue',linewidth=1.0,linestyle='-.')

plt.xlable('x')  #x轴标签
plt.ylable('y')

#plt.xlim((-1,2))  #x轴区间
#plt.ylim((-2,3))

#plt.xticks(np.linspace(-2,2,11))  #指定x轴间隔
#plt.yticks([-1,0,1,2,3],
           ['a','b','c','d','e'])  #用词汇代替数值
		   
ax = plt.gca()  #获取当前坐标轴
ax.spines['right'].set_color('none')  #右边框颜色
ax.spines['top'].set_color('none')
ax.xaxis.set_sticks_position('bottom')  #x轴与下边框匹配
ax.yaxis.set_sticks_position('left')
ax.spines['bottom'].set_position('data',0)  #下边框放到y=0处
ax.spines['left'].set_position('data',0)  #左边框放到x=0处

#plt.text(-1,2,r'$The\ text$',fontdict={'size':'16','color':'red'})  #在(-1,2)添加文本

plt.legend(handles[line1,line2],lables=['LINE1','LINE2'],loc='best')  #对应线加图例

plt.show()  #显示图像
#CASE1====================================================================

#散点图
x = np.random.normal(0,1,500)  #生成500个随机数
y = np.random.normal(0,1,500)
plt.figure(figsize(5,5))  #创建一个figure，给定长宽
plt.scatter(x,y,s=50,color='blue',alpha=0.5)  #尺寸50，透明度0.5
plt.show

#直方图
x = np.linsapce(0,9,10)
y = 2**x + 10
plt.figure(figsize(5,5))  #创建一个figure，给定长宽
plt.bar(x,y,facecolor='blue',edgecolor='none')
for x y in zip(x,y):
  plt.text(x,y,'%.2f' % y,ha='center',va='botoom')  #添加标注
plt.show()

#等高线图
def f(x,y):
  return (1-x/2+x**5+y**3)*np.exp(-x**2-y**2)  #高度函数
x = np.linspace(-3,3,100)
y = np.linspace(-3,3,100)
X,Y = np.meshgrid(x,y)  #网格式生成布点
plt.figure(figsize(5,5))  #创建一个figure，给定长宽
plt.contourf(X,Y,f(X,Y),8,alpha=0.75,cmap=plt.cm.hot)  #彩色图
C = plt.contour(X,Y,f(X,Y),8,colors='black',linewidth=0.5)  #等高线
plt.clabel(C,inline=True,fontsize=10)  #等高线数值的标注
plt.xticks(())  #不需要x轴的数值显示
plt.yticks(())
plt.show()

#3D图形
from mpl_toolkits.mplot3d import Axes3D  #用于3D绘图
fig1 = plt.figure()
ax = Axes3D(fig1)
x = np.arange(-4,4,0.25)
y = np.arange(-4,4,0.25)
X,Y = np.meshgrid(x,y)
Z = np.sin(np.sqrt(X**2+Y**2))
ax.plt_surface(X,Y,Z,rstride=0.1,cstride=0.1,cmap=plt.get_cmap('rainbow'))  #x方向绘图密度rstride，y方向绘图密度cstride
#ax.contourf(X,Y,Z,zdir='z',offset=-2,cmap='rainbow')  #在z方向加一个辅助的等高线图
ax.set_zlim(-2,2)
plt.show()


#mechanics_xzy@163.com
#XieZhuoYu